List p=18f4520
    #include<p18f4520.inc>
        CONFIG OSC = INTIO67
        CONFIG WDT = OFF
        org 0x00
	

	LFSR 0, 0x300

	;MOVLW 0xFA ;A1
	;MOVWF POSTINC0
	;MOVLW 0xB2 ;A2
	;MOVWF POSTINC0
	;MOVLW 0xAF ;A3
	;MOVWF POSTINC0
	;MOVLW 0x93 ;A4
	;MOVWF POSTINC0
	;MOVLW 0x85 ;A5
	;MOVWF POSTINC0
	;MOVLW 0x58 ;A6
	;MOVWF POSTINC0
	;MOVLW 0x39 ;A7
	;MOVWF POSTINC0
	;MOVLW 0x2B ;A8
	;MOVWF POSTINC0
	
	;MOVLW 0x3E ;A1
	;MOVWF POSTINC0
	;MOVLW 0x55 ;A2
	;MOVWF POSTINC0
	;MOVLW 0xE3 ;A3
	;MOVWF POSTINC0
	;MOVLW 0x55 ;A4
	;MOVWF POSTINC0
	;MOVLW 0xE3 ;A5
	;MOVWF POSTINC0
	;MOVLW 0x55 ;A6
	;MOVWF POSTINC0
	;MOVLW 0x55 ;A7
	;MOVWF POSTINC0
	;MOVLW 0x3E ;A8
	;MOVWF POSTINC0
	
	MOVLW 0xC4 ;A1
	MOVWF POSTINC0
	MOVLW 0xBB ;A2
	MOVWF POSTINC0
	MOVLW 0xBB ;A3
	MOVWF POSTINC0
	MOVLW 0x00 ;A4
	MOVWF POSTINC0
	MOVLW 0x4C ;A5
	MOVWF POSTINC0
	MOVLW 0x8B ;A6
	MOVWF POSTINC0
	MOVLW 0xBB ;A7
	MOVWF POSTINC0
	MOVLW 0x00 ;A8
	MOVWF POSTINC0
	
	LFSR 0, 0x300
	LFSR 1, 0x300
	LFSR 2, 0x320
	
	MOVLW 8
	MOVLB 2
	MOVWF 0xE0
	
Sortbyte:

	
	MOVFF FSR1L, FSR0L   ; FSR1 -> FSR0
	MOVFF FSR1H, FSR0H   ; 
	CLRF WREG
	ADDWF POSTINC1, W
	
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	
	CPFSLT INDF0 ;compare cur_A and reversed_A skip next line if cur_A < reversed_A
	MOVWF POSTINC0
	
	DECFSZ 0x2E0
	GOTO Sortbyte

sortinit:
	MOVLW 8
	MOVLB 2 ;bank2
	MOVWF 0xF0 ;icount
	
	MOVLW 7
	MOVLB 2 ;bank2
	MOVWF 0xF2 ;jcount
	
	LFSR 0, 0x2FF
	
sorti:
	MOVFF 0x2F2, 0x2F4 ;;set curj
	DECF 0x2F2 ;;jcount--
    	DCFSNZ 0x2F0 ;;icount-- stop if icount == 0
	GOTO checkpalindrome
	
	
	
	CLRF WREG
	ADDWF PREINC0, W ;WREG = A[i]
	
	;get j = i + 1
	MOVFF FSR0L, FSR1L   ; ??FSR0?? -> FSR1
	MOVFF FSR0H, FSR1H   ; ??FSR0?? -> FSR1
	
	
	
	GOTO sortj

	
sortj:
	CPFSGT PREINC1	 ; skip next line if A[i+1] > A[i]
	GOTO swap ; do this if A[i+1] <= A[i]
	GOTO nextj; nextj if A[i+1] > A[i]

swap: 
	CLRF WREG ; WREG = A[i+1]
	
	ADDWF INDF0, W
	MOVFF INDF1, INDF0
	MOVWF INDF1
	
	CLRF WREG
	ADDWF INDF0, W

	GOTO nextj
    
nextj:
	
	DECFSZ 0x2F4 ;;curj--
	GOTO sortj
	GOTO sorti
	
	
checkpalindrome:	
	LFSR 0, 0x300
	LFSR 1, 0x301
	;1st pair
	CLRF WREG
	ADDWF INDF1, W
	
	CPFSEQ INDF0
	GOTO NoMatch
	
	
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	MOVF POSTINC1, F
	MOVF POSTINC1, F
	
	
	;2nd pair
	CLRF WREG
	ADDWF INDF1, W
	
	CPFSEQ INDF0
	GOTO NoMatch
	
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	MOVF POSTINC1, F
	MOVF POSTINC1, F
	
	;3th pair
	CLRF WREG
	ADDWF INDF1, W
	
	CPFSEQ INDF0
	GOTO NoMatch
	
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	MOVF POSTINC1, F
	MOVF POSTINC1, F
	
	;4th pair
	CLRF WREG
	ADDWF INDF1, W
	
	CPFSEQ INDF0
	GOTO NoMatch
	
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	MOVF POSTINC1, F
	MOVF POSTINC1, F
	
	GOTO restore
	
	
	

	
	
NoMatch:
    
	LFSR 2, 0x320
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	MOVLW 0xFF
	MOVWF POSTINC2
	GOTO STOP
    
    
restore:
	LFSR 0, 0x300
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	RLNCF INDF0
	MOVF POSTINC0, F
	MOVF POSTINC0, F
	
sortinit1:
	MOVLW 8
	MOVLB 2 ;bank2
	MOVWF 0xF0 ;icount
	
	MOVLW 7
	MOVLB 2 ;bank2
	MOVWF 0xF2 ;jcount
	
	LFSR 0, 0x2FF
	
sorti1:
	MOVFF 0x2F2, 0x2F4 ;;set curj
	DECF 0x2F2 ;;jcount--
    	DCFSNZ 0x2F0 ;;icount-- stop if icount == 0
	GOTO printresult
	
	
	
	CLRF WREG
	ADDWF PREINC0, W ;WREG = A[i]
	
	;get j = i + 1
	MOVFF FSR0L, FSR1L   ; ??FSR0?? -> FSR1
	MOVFF FSR0H, FSR1H   ; ??FSR0?? -> FSR1
	
	
	
	GOTO sortj1

	
sortj1:
	CPFSGT PREINC1	 ; skip next line if A[i+1] > A[i]
	GOTO swap1 ; do this if A[i+1] <= A[i]
	GOTO nextj1; nextj if A[i+1] > A[i]

swap1: 
	CLRF WREG ; WREG = A[i+1]
	
	ADDWF INDF0, W
	MOVFF INDF1, INDF0
	MOVWF INDF1
	
	CLRF WREG
	ADDWF INDF0, W

	GOTO nextj1
    
nextj1:
	
	DECFSZ 0x2F4 ;;curj--
	GOTO sortj1
	GOTO sorti1
	
	
	
	
printresult:
	LFSR 0, 0x303
	LFSR 1, 0x304
	
	CLRF WREG
	ADDWF POSTDEC0, W ;A3
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	MOVWF POSTINC1
	
	CLRF WREG
	ADDWF POSTDEC0, W ;A2
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	MOVWF POSTINC1
	
	CLRF WREG
	ADDWF POSTDEC0, W ;A1
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	MOVWF POSTINC1
	
	CLRF WREG
	ADDWF POSTDEC0, W ;A0
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	RLNCF WREG
	MOVWF POSTINC1
	
STOP:
	end


